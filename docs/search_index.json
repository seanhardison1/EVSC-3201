[
["index.html", "EVSC 3201 Materials Introduction", " EVSC 3201 Materials Sean Hardison 2020-04-02 Introduction In light of the extenuating circumstances regarding COVID-19, I’ve decided to experiment with a new format for teaching the Fundamental of Ecology Lab. For the rest of the semester, I’ll add instructions, notes, and videos to tabs on this site. The goal of these materials is to supplement the lab manual by providing some interactivity that we’re missing out on by not meeting face-to-face. Assignments due each week will be added to the bottom of each page. "],
["forest-lab-data-analysis-results.html", "1 Forest Lab Data Analysis: Results 1.1 Processing and analytical code 1.2 Environmental data: barplots (Q1) 1.3 Environmental data: linear models and scatter plots (Q2) 1.4 Table of model summaries (Q4) 1.5 Tree community composition", " 1 Forest Lab Data Analysis: Results See below for results from the forest lab field study. When answering the questions on page 27 of your lab manual, make sure your interpretations align with what’s shown here. 1.1 Processing and analytical code Important: This code must be evaluated prior to running any other code in this document. Note that I used read_excel to read in data directly from where it is located on my computer. To reproduce these analyses you will need to alter those lines to match where the data is located on your own computer. # read in libraries library(readxl) library(tidyverse) #read in data - change these lines to reflect where the data are stored on your computer env = read_excel(&quot;/users/seanhardison/desktop/ecology lab/environmental_data.xlsx&quot;) forest = read_excel(&quot;/users/seanhardison/desktop/ecology lab/forest_lab.xlsx&quot;) #summarise data summary_env = env %&gt;% #create new column for slope angle mutate(slope_angle = atan(Rise/Run) * 180/pi) %&gt;% #Tell R to group by Site for finding mean and standard deviation group_by(Site) %&gt;% #Find the mean and standard deviation by site summarise(mean_slope_angle = mean(slope_angle, na.rm = T), sd_slope_angle = sd(slope_angle, na.rm = T), mean_thickness = mean(`Horizon Thickness`), sd_thickness = sd(`Horizon Thickness`), mean_moisture = mean(`Soil Moisture`), sd_moisture = sd(`Soil Moisture`), mean_temperature = mean(`Soil Temperature`), sd_temperature = sd(`Soil Temperature`)) 1.2 Environmental data: barplots (Q1) Slope angle ggplot(summary_env) + geom_bar(aes(x = Site, y = mean_slope_angle), stat = &quot;identity&quot;) + geom_errorbar(aes(x = Site, ymin = mean_slope_angle - sd_slope_angle, ymax = mean_slope_angle + sd_slope_angle), width = 0.25) + ylab(&quot;Mean slope angle (°)&quot;) + theme_bw() Horizon thickness ggplot(summary_env) + geom_bar(aes(x = Site, y = mean_thickness), stat = &quot;identity&quot;) + geom_errorbar(aes(x = Site, ymin = mean_thickness - sd_thickness, ymax = mean_thickness + sd_thickness), width = 0.25) + ylab(&quot;Mean horizon thickness (cm)&quot;) + theme_bw() Soil temperature ggplot(summary_env) + geom_bar(aes(x = Site, y = mean_temperature), stat = &quot;identity&quot;) + geom_errorbar(aes(x = Site, ymin = mean_temperature - sd_temperature, ymax = mean_temperature + sd_temperature), width = 0.25) + ylab(&quot;Mean soil temperature (°F)&quot;) + theme_bw() Soil moisture ggplot(summary_env) + geom_bar(aes(x = Site, y = mean_moisture), stat = &quot;identity&quot;) + geom_errorbar(aes(x = Site, ymin = mean_moisture - sd_moisture, ymax = mean_moisture + sd_moisture), width = 0.25) + ylab(&quot;Mean soil moisture (%)&quot;) + theme_bw() 1.3 Environmental data: linear models and scatter plots (Q2) Lines of best fit are shown on plots when significant relationships (P &lt; 0.05) are identified using linear models. soil temperature ~ soil moisture ggplot(summary_env) + geom_point(aes(x = mean_moisture, y = mean_temperature)) + ylab(&quot;Mean temperature (°F)&quot;) + xlab(&quot;Mean soil moisture (%)&quot;) temp_moisture_mod = lm(mean_temperature ~ mean_moisture, data = summary_env) summary(temp_moisture_mod) ## ## Call: ## lm(formula = mean_temperature ~ mean_moisture, data = summary_env) ## ## Residuals: ## 1 2 3 4 5 ## 1.0967 1.3972 0.2612 -0.5021 -2.2531 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 45.473075 2.940404 15.465 0.000587 *** ## mean_moisture -0.006169 0.064197 -0.096 0.929507 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 1.688 on 3 degrees of freedom ## Multiple R-squared: 0.003068, Adjusted R-squared: -0.3292 ## F-statistic: 0.009234 on 1 and 3 DF, p-value: 0.9295 soil moisture ~ horizon thickness ggplot(summary_env) + geom_point(aes(x = mean_thickness, y = mean_moisture)) + ylab(&quot;Mean temperature (°F)&quot;) + xlab(&quot;Mean horizon thickness (cm)&quot;) moist_hor_thickness_mod = lm(mean_moisture ~ mean_thickness, data = summary_env) summary(moist_hor_thickness_mod) ## ## Call: ## lm(formula = mean_moisture ~ mean_thickness, data = summary_env) ## ## Residuals: ## 1 2 3 4 5 ## -5.593 -11.075 20.661 5.159 -9.152 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 42.8344 32.3667 1.323 0.278 ## mean_thickness 0.4962 10.9631 0.045 0.967 ## ## Residual standard error: 15.18 on 3 degrees of freedom ## Multiple R-squared: 0.0006823, Adjusted R-squared: -0.3324 ## F-statistic: 0.002048 on 1 and 3 DF, p-value: 0.9667 soil temperature ~ horizon thickness ggplot(summary_env) + geom_point(aes(x = mean_thickness, y = mean_temperature)) + ylab(&quot;Mean temperature (°F)&quot;) + xlab(&quot;Mean horizon thickness (cm)&quot;) + geom_smooth(aes(x = mean_thickness, y = mean_temperature), method = &quot;lm&quot;) temp_thick_mod = lm(mean_temperature ~ mean_thickness, data = summary_env) summary(temp_thick_mod) ## ## Call: ## lm(formula = mean_temperature ~ mean_thickness, data = summary_env) ## ## Residuals: ## 1 2 3 4 5 ## -0.18332 0.72525 0.41456 -0.89126 -0.06523 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 50.7351 1.5229 33.316 5.94e-05 *** ## mean_thickness -1.9175 0.5158 -3.717 0.0339 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.7142 on 3 degrees of freedom ## Multiple R-squared: 0.8216, Adjusted R-squared: 0.7622 ## F-statistic: 13.82 on 1 and 3 DF, p-value: 0.03387 horizon thickness ~ slope angle ggplot(summary_env) + geom_point(aes(x = mean_slope_angle, y = mean_thickness)) + ylab(&quot;Mean horizon thickness (cm)&quot;) + xlab(&quot;Mean slope angle (°)&quot;) + geom_smooth(aes(x = mean_slope_angle, y = mean_thickness), method = &quot;lm&quot;) thickness_slope_mod = lm(mean_thickness ~ mean_slope_angle, data = summary_env) summary(thickness_slope_mod) ## ## Call: ## lm(formula = mean_thickness ~ mean_slope_angle, data = summary_env) ## ## Residuals: ## 1 2 3 4 5 ## 0.10310 0.03869 0.06312 -0.46425 0.25934 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 0.72216 0.55535 1.30 0.2844 ## mean_slope_angle 0.17646 0.04379 4.03 0.0275 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.3156 on 3 degrees of freedom ## Multiple R-squared: 0.8441, Adjusted R-squared: 0.7921 ## F-statistic: 16.24 on 1 and 3 DF, p-value: 0.02747 soil moisture ~ slope angle ggplot(summary_env) + geom_point(aes(x = mean_slope_angle, y = mean_moisture)) + ylab(&quot;Mean soil moisture (%)&quot;) + xlab(&quot;Mean slope angle (°)&quot;) moist_slope_mod = lm(mean_moisture ~ mean_slope_angle, data = summary_env) summary(moist_slope_mod) ## ## Call: ## lm(formula = mean_moisture ~ mean_slope_angle, data = summary_env) ## ## Residuals: ## 1 2 3 4 5 ## -3.360 -9.881 20.461 4.162 -11.383 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 37.213 26.381 1.411 0.253 ## mean_slope_angle 0.575 2.080 0.276 0.800 ## ## Residual standard error: 14.99 on 3 degrees of freedom ## Multiple R-squared: 0.02484, Adjusted R-squared: -0.3002 ## F-statistic: 0.07642 on 1 and 3 DF, p-value: 0.8002 1.4 Table of model summaries (Q4) Relationship (y ~ x) slope y-intercept \\(R^2\\) P value soil temperature ~ soil moisture -0.006 45.473 0.003 0.930 soil moisture ~ horizon thickness 0.496 42.834 0.001 0.967 soil temperature ~ horizon thickness -1.917 50.735 0.822 0.034 horizon thickness ~ slope angle 0.176 0.722 0.844 0.027 soil moisture ~ slope angle 0.575 37.213 0.025 0.800 1.5 Tree community composition In order to better visualize individual species, I added a line specifying a new color palette: ... + scale_fill_manual(values = as.vector(pals::polychrome(35))). Species relative frequency # Data processing rel_freq = forest %&gt;% # Select columns we want to plot select(Site, `Relative Frequency`, `Tree ID`) %&gt;% # Get distinct values of each row distinct() # Plot the data ggplot(data = rel_freq) + geom_bar(aes(x = Site, y = `Relative Frequency`, fill = `Tree ID`), stat = &quot;identity&quot;) + #add color palette scale_fill_manual(values = as.vector(pals::polychrome(35)))+ theme_bw() Species relative dominance # Data processing rel_dom = forest %&gt;% # Select columns we want to plot select(Site, `Relative Dominance`, `Tree ID`) %&gt;% # Get distinct values of each row distinct() # Plot the data ggplot(data = rel_dom) + geom_bar(aes(x = Site, y = `Relative Dominance`, fill = `Tree ID`), stat = &quot;identity&quot;) + #add color palette scale_fill_manual(values = as.vector(pals::polychrome(35)))+ theme_bw() Species importance # Data processing importance = forest %&gt;% # Select columns we want to plot select(Site, Importance, `Tree ID`) %&gt;% # Get distinct values of each row distinct() # Plot the data ggplot(data = importance) + geom_bar(aes(x = Site, y = Importance, fill = `Tree ID`), position = &quot;dodge&quot;, stat = &quot;identity&quot;) + #add color palette scale_fill_manual(values = as.vector(pals::polychrome(35))) + theme_bw() "],
["stream-lab-week-of-327.html", "2 Stream Lab (week of 3/27) 2.1 Supplemental videos 2.2 Discussion questions 2.3 Assignments", " 2 Stream Lab (week of 3/27) 2.1 Supplemental videos Stream stressors: impervious surfaces Stream restoration in Baltimore County Stream characteristics: pools and riffles 2.2 Discussion questions Video 1. Scientists from the Smithsonian Environmental Research Center use biodiversity assessments to quantify the health of stream habitats. How would you expect an increase in nearby impervious surfaces to affect the abundance and biodiversity of stream macroinvertebrates? Why? Video 2. In Northern Virginia, rapid development has led to increased run-off and subsequent stream erosion. According to the video about Baltimore County stream restoration, what are two methods that are used to restore streams in developed areas? Video 3. Pool and riffle sequences are characterized by unique flow characteristics. After reading pages 29-35 in the lab manual and watching the video on pools and riffles, would you expect biodiversity and abundance to be higher in pools or in riffles? Why? 2.3 Assignments Assignments are due on March 29th March 27th by 2 pm. Use this week’s reading (pages 29-35 in your lab manual) and the embedded videos to answer the discussion questions listed above. Submit in a word document. Don’t forget that forest lab questions and abstract are also due! The stream lab involves calculating Simpson’s diversity index (D) (lab manual pg. 36) and species rank abundance curves. Download the file dinosaur_example.xlsx from collab, and see if you can calculate D and rank abundance from the given abundance data “sampled” at Site A and Site B. Give it a shot over next week and we will finish/discuss it in class. Here’s the Excel calculation for Site A: "],
["stream-lab-2-week-of-43.html", "3 Stream Lab 2 (week of 4/3) 3.1 Assignments", " 3 Stream Lab 2 (week of 4/3) 3.1 Assignments This week’s assignment is to complete the introduction and methods sections for your Stream Lab report. The due date for this assignment is Monday, April 6th at 11:59 PM. Instructions for your assignment are listed on page 35 of your lab manual. Have another look at the lecture powerpoint from last week for supplemental information that may be useful for writing. Check back here in a couple of days for more information regarding data analysis for your Results and Discussion sections; due Friday, April 10th by 2:00 PM. "],
["stream-lab-3-week-of-410.html", "4 Stream Lab 3 (week of 4/10) 4.1 Hypothesis testing", " 4 Stream Lab 3 (week of 4/10) 4.1 Hypothesis testing The text below was adapted from Zar (1984). 4.1.1 The t statistic Hypothesis testing is all about drawing inferences about a broader population given a representative sample. A common approach to hypothesis testing involves comparing the means of two samples. For example, consider an experiment where nitrogen fertilizer was added to the soils of 40 randomly selected plants, with 40 other plants not recieving the nutrient treatment. The heights of each plant were measured after two weeks. The results of the experiment are shown in Figure 3.1. In this experiment, our null hypothesis (\\(H_0\\)) is that there is no difference in mean height between the plants recieving nutrient and no-nutrient treatments. We can test this hypothesis using a two sample t test, which is designed to infer differences in two populations being sampled. Figure 4.1: Histograms showing the heights of two groups of plants after two weeks of growth. The orange histogram reflects those plants that recieved a nitrogen treatment and the purple histogram shows the plants that did not. Before we jump into the t test, consider the mean of the no nutrient sample: 10.3. This mean value is representative of only one of many possible means from samples of size 40 that could have been drawn randomly (Fig. 3.2). Figure 4.2: The distribution of all possible sample means. Our sample mean is only one of many possible outcomes, the most likely of which is the population mean. The distribution of all possible mean values for a given sample size is the t distribution. The shape of the distribution changes according to your degrees of freedom \\((v)\\), which is equal to \\(n - 1\\). Therefore, our sample has \\(40-1 = 39\\) degrees of freedom. As sample size increases, the “tails” of the distribution shrink (Fig. 3.3), reflecting a greater probability of capturing the population mean in your sample. Figure 4.3: The t distribution with a range of degrees of freedom \\((v)\\). Note how the “tails” become larger when \\(v\\) is small. Some sample means are more likely than others. In this example, the probability of a sample mean being less than 7.6 cm is less than 2.5%, and the probability of a sample mean being greater than 12.4 cm is less than 2.5%. Therefore, the probability of a sample mean as extreme or more extreme than either value is less than 5%, or 0.05 (Fig. 3.4) . Figure 4.4: Another look at the distribution of all possible sample means. 4.1.2 The two-sample t test It turns out that if two populations have equal variances (the “spread” of the data) and are normally distributed, then the ratio of the difference in means \\((\\bar{X_1} - \\bar{X_2})\\) to the standard error of the difference between the sample means \\((s_{\\bar{X_1} - \\bar{X_2}})\\) is t distributed. The t statistic for a two-sample t test: \\[t = \\frac{\\bar{X_1} - \\bar{X_2}}{s_{\\bar{X_1} - \\bar{X_2}}}\\] Therefore, when the above t statistic is large, it becomes unlikely that two samples were drawn from the same population, and it follows that each t statistic is associated with a probability (\\(P\\)), just like in our previous example. If \\(P\\) &lt; 0.05, then we can reject the null hypothesis of no difference between the means of our two samples. This P value is equivalent to the probability of the t statistic occurring by chance alone upon repeated sampling, or phrased differently, the probability of the difference in means between samples occurring by chance alone upon repeated sampling. 4.1.3 t tests in R and Excel 4.1.3.1 R Here I’ll implement the two-sample t test as described above for the plant-nutrient example. In R, two-sample t tests are straightforward once the data are in the correct format. # first read in data, as practiced in the Forest Lab. df &lt;- read.csv(file = &quot;/users/seanhardison/documents/git/EVSC-3201/data/nutrient_example.csv&quot;) # view the first ten rows of data. head(df) ## no_nitrogen nitrogen_added X X.1 X.2 X.3 X.4 X.5 X.6 X.7 X.8 X.9 X.10 X.11 ## 1 9.338150 12.56883 NA NA NA NA NA NA NA ## 2 11.718954 13.38245 NA NA NA NA NA NA NA ## 3 12.121667 13.04113 NA NA NA NA NA NA NA ## 4 11.497154 12.94078 NA NA NA NA NA NA NA ## 5 9.963859 11.70358 NA NA NA NA NA NA NA ## 6 11.231945 10.86302 NA NA NA NA NA NA NA # do the t test comparing means between nutrient treatments t.test(df$no_nitrogen, df$nitrogen_added) ## ## Welch Two Sample t-test ## ## data: df$no_nitrogen and df$nitrogen_added ## t = -12.759, df = 77.952, p-value &lt; 2.2e-16 ## alternative hypothesis: true difference in means is not equal to 0 ## 95 percent confidence interval: ## -2.920589 -2.132171 ## sample estimates: ## mean of x mean of y ## 10.33504 12.86142 The results show that \\(t = -12.79\\) and \\(P &lt; 0.0001\\). Therefore, we can reject the null hypothesis that there was no effect of nitrogen treatment, lending support to the alternative hypothesis that nitrogen is beneficial for plant growth. 4.1.3.2 Excel The process in Excel is just as quick and easy as in R. Once your spreadsheet is open, select the Data Analysis tab Next, select t-Test: Two-Sample Assuming Equal Variances Select Variable 1 Range and highlight the first column you want to compare Select Variable 2 Range and highlight the second column you want to compare Select OK 4.1.4 What do I report? When finished with a t test, you should report the t statistic, degrees of freedom, and P value. References "],
["references.html", "References", " References "]
]
